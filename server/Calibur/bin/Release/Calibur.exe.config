<?xml version="1.0" encoding="utf-8"?>
<configuration>
    <appSettings>
        <add key="fiddlerport" value="5389" />
        <add key="isautoresponser" value="false" />
        <add key="ishttps" value="true" />
        <add key="AutoForceProxy" value="" />
        <add key="MaxLines" value="1000" />
        <add key="AutoResponserSettings" value="[{&quot;id&quot;:1,&quot;text&quot;:&quot;1eeqw&quot;,&quot;pId&quot;:null,&quot;name&quot;:&quot;AutoResponser&quot;,&quot;drag&quot;:false,&quot;open&quot;:true,&quot;children&quot;:[{&quot;id&quot;:11,&quot;pId&quot;:1,&quot;name&quot;:&quot;服务代理&quot;,&quot;open&quot;:true,&quot;children&quot;:[{&quot;id&quot;:101,&quot;pId&quot;:11,&quot;name&quot;:&quot;Detail代理v3&quot;,&quot;level&quot;:2,&quot;tId&quot;:&quot;autoResponserTree_3&quot;,&quot;parentTId&quot;:&quot;autoResponserTree_2&quot;,&quot;open&quot;:false,&quot;isParent&quot;:false,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:true,&quot;isLastNode&quot;:false,&quot;isAjaxing&quot;:false,&quot;checked&quot;:false,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:false,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:-1,&quot;check_Focus&quot;:false,&quot;isHover&quot;:false,&quot;editNameFlag&quot;:false,&quot;requestScript&quot;:&quot;var session = context.session;\r\nif (session.FullUrl.indexOf('/GetOrderDetail.json') &gt; -1) {\r\n\r\n session.GetRequestBodyAsString(function(ssn) {\r\n var requestBody = JSON.parse(ssn.Return || \&quot;{}\&quot;);\r\n if (requestBody &amp;&amp; requestBody.RequestType === 1) {\r\n session.SetfullUrl(\&quot;http://localhost:3915/GetOrderDetailV3.json\&quot;);\r\n }\r\n });\r\n}&quot;},{&quot;id&quot;:112,&quot;pId&quot;:11,&quot;name&quot;:&quot;前端fws代理本地服务&quot;,&quot;level&quot;:2,&quot;tId&quot;:&quot;autoResponserTree_4&quot;,&quot;parentTId&quot;:&quot;autoResponserTree_2&quot;,&quot;open&quot;:false,&quot;isParent&quot;:false,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:false,&quot;isLastNode&quot;:false,&quot;isAjaxing&quot;:false,&quot;isHover&quot;:false,&quot;editNameFlag&quot;:false,&quot;checked&quot;:false,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:false,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:-1,&quot;check_Focus&quot;:false,&quot;responseScript&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;var session = context.session;\nif(/.+\\/10124\\/(.+?)(\\?.*)?/.test(session.FullUrl))\n{\n session.SetfullUrl(session.FullUrl.replace(\n /.+\\/10124\\/(.+?)(\\?.*)?/,\n \&quot;http://localhost:3915/$1\&quot;)\n );\n}\n&quot;},{&quot;id&quot;:113,&quot;pId&quot;:11,&quot;name&quot;:&quot;跨域&quot;,&quot;level&quot;:2,&quot;tId&quot;:&quot;autoResponserTree_5&quot;,&quot;parentTId&quot;:&quot;autoResponserTree_2&quot;,&quot;open&quot;:false,&quot;isParent&quot;:false,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:false,&quot;isLastNode&quot;:true,&quot;isAjaxing&quot;:false,&quot;isHover&quot;:false,&quot;editNameFlag&quot;:false,&quot;checked&quot;:false,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:false,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:-1,&quot;check_Focus&quot;:false,&quot;responseScript&quot;:&quot;var session = context.session;\nvar csrfHeaders = {\n \&quot;Access-Control-Allow-Headers\&quot;: \&quot;accept, content-type, cookieorigin\&quot;,\n \&quot;Access-Control-Allow-Origin\&quot;:session.RequestHeaders.Origin || \&quot;*\&quot;,\n \&quot;Access-Control-Allow-Credentials\&quot;: \&quot;true\&quot;,\n \&quot;Access-Control-Allow-Methods\&quot;:\&quot;POST\&quot;,\n};\nsession.SetResponseHeaders(JSON.stringify(csrfHeaders));\n\n&quot;}],&quot;level&quot;:1,&quot;tId&quot;:&quot;autoResponserTree_2&quot;,&quot;parentTId&quot;:&quot;autoResponserTree_1&quot;,&quot;isParent&quot;:true,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:true,&quot;isLastNode&quot;:false,&quot;isAjaxing&quot;:false,&quot;isHover&quot;:false,&quot;editNameFlag&quot;:false,&quot;checked&quot;:false,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:false,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:0,&quot;check_Focus&quot;:false},{&quot;id&quot;:12,&quot;pId&quot;:1,&quot;name&quot;:&quot;飞燕缓存&quot;,&quot;open&quot;:true,&quot;children&quot;:[{&quot;id&quot;:122,&quot;pId&quot;:12,&quot;name&quot;:&quot;实时不刷缓存&quot;,&quot;level&quot;:2,&quot;tId&quot;:&quot;autoResponserTree_7&quot;,&quot;parentTId&quot;:&quot;autoResponserTree_6&quot;,&quot;open&quot;:false,&quot;isParent&quot;:false,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:true,&quot;isLastNode&quot;:false,&quot;isAjaxing&quot;:false,&quot;isHover&quot;:false,&quot;editNameFlag&quot;:false,&quot;checked&quot;:false,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:false,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:-1,&quot;check_Focus&quot;:false,&quot;requestScript&quot;:&quot;var session = context.session;\nif(session.FullUrl.indexOf('ProductDetailV3') &gt; -1)\n{\n var lastRequestBody = null;\n session.GetRequestBodyAsString(function(ssn){\n var requestBody = JSON.parse(ssn.Return||\&quot;{}\&quot;);\n if(requestBody&amp;&amp;requestBody.RequestTypeList){\n requestBody.D = {D:true,T:true};\n lastRequestBody = JSON.stringify(requestBody);\n session.UtilSetRequestBody(lastRequestBody);\n }\n });\n \n}&quot;},{&quot;id&quot;:121,&quot;pId&quot;:12,&quot;name&quot;:&quot;强刷缓存&quot;,&quot;level&quot;:2,&quot;tId&quot;:&quot;autoResponserTree_8&quot;,&quot;parentTId&quot;:&quot;autoResponserTree_6&quot;,&quot;open&quot;:false,&quot;isParent&quot;:false,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:false,&quot;isLastNode&quot;:true,&quot;isAjaxing&quot;:false,&quot;isHover&quot;:false,&quot;editNameFlag&quot;:false,&quot;checked&quot;:true,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:false,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:-1,&quot;check_Focus&quot;:false,&quot;requestScript&quot;:&quot;var session = context.session;\nif(session.FullUrl.indexOf('ProductDetailV3') &gt; -1)\n{\n var lastRequestBody = null;\n session.GetRequestBodyAsString(function(ssn){\n var requestBody = JSON.parse(ssn.Return||\&quot;{}\&quot;);\n if(requestBody&amp;&amp;requestBody.RequestTypeList){\n requestBody.D = {D:true,T:true,F:true};\n lastRequestBody = JSON.stringify(requestBody);\n session.UtilSetRequestBody(lastRequestBody);\n }\n });\n}\n&quot;}],&quot;level&quot;:1,&quot;tId&quot;:&quot;autoResponserTree_6&quot;,&quot;parentTId&quot;:&quot;autoResponserTree_1&quot;,&quot;isParent&quot;:true,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:false,&quot;isLastNode&quot;:false,&quot;isAjaxing&quot;:false,&quot;isHover&quot;:false,&quot;editNameFlag&quot;:false,&quot;checked&quot;:true,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:false,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:1,&quot;check_Focus&quot;:false},{&quot;id&quot;:13,&quot;pId&quot;:1,&quot;name&quot;:&quot;ABTesting&quot;,&quot;open&quot;:true,&quot;children&quot;:[{&quot;id&quot;:131,&quot;pId&quot;:13,&quot;name&quot;:&quot;ab_testing_tracker&quot;,&quot;level&quot;:2,&quot;tId&quot;:&quot;autoResponserTree_10&quot;,&quot;parentTId&quot;:&quot;autoResponserTree_9&quot;,&quot;open&quot;:false,&quot;isParent&quot;:false,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:true,&quot;isLastNode&quot;:true,&quot;isAjaxing&quot;:false,&quot;isHover&quot;:false,&quot;editNameFlag&quot;:false,&quot;checked&quot;:true,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:false,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:-1,&quot;check_Focus&quot;:false,&quot;responseScript&quot;:&quot;var session = context.session;\r\nvar contentType = session.ResponseHeaders['Content-Type'];\r\nif (contentType &amp;&amp; contentType.indexOf('text/html') &gt; -1 &amp;&amp; (session.Host.indexOf('ctrip.com') &gt; -1 || session.Host.indexOf('ctripcorp.com') &gt; -1)) {\r\n\tvar abTestingMapping = {\r\n\t\t\&quot;151123_vag_LTHY\&quot;: \&quot;B\&quot;,\r\n\t\t\&quot;151123_vag_PSHY\&quot;: \&quot;B\&quot;,\r\n\t\t\&quot;151125_dya_SPDH5\&quot;: \&quot;B\&quot;,\r\n\t\t\&quot;151216_dya_PSH5\&quot;: \&quot;B\&quot;\r\n\t};\r\n\r\n\tif (abTestingMapping) {\r\n\t\tsession.GetResponseBodyAsString(function(ssn) {\r\n\t\t\tvar html = ssn.Return;\r\n\t\t\tvar re_abTesting = /value=\\\&quot;((M:.+?;)*)\\\&quot;/;\r\n\t\t\tvar splitData = html.split(re_abTesting);\r\n\t\t\tif (splitData) {\r\n\t\t\t\tabData = splitData[1];\r\n\t\t\t\tfor (var abKey in abTestingMapping) {\r\n\t\t\t\t\tif (abData.indexOf(abKey) &gt; -1) {\r\n\t\t\t\t\t\tabData = abData.replace(\r\n\t\t\t\t\t\t\tnew RegExp('(' + abKey + ':)(.)'),\r\n\t\t\t\t\t\t\t'$1' + abTestingMapping[abKey]\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tabData += 'M:32,' + abKey + ':' + abTestingMapping[abKey] + ';';\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\thtml = splitData[0] + 'value=\&quot;' + abData + '\&quot;' + splitData[3];\r\n\t\t\t}\r\n\t\t\treturn html;\r\n\t\t}).UtilSetResponseBody({\r\n\t\t\t'inc': null,\r\n\t\t\t'met': function(ssn,msg) {\r\n\t\t\t\treturn [msg.LastReturn];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}&quot;,&quot;requestScript&quot;:&quot;&quot;}],&quot;level&quot;:1,&quot;tId&quot;:&quot;autoResponserTree_9&quot;,&quot;parentTId&quot;:&quot;autoResponserTree_1&quot;,&quot;isParent&quot;:true,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:false,&quot;isLastNode&quot;:false,&quot;isAjaxing&quot;:false,&quot;isHover&quot;:false,&quot;editNameFlag&quot;:false,&quot;checked&quot;:true,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:false,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:2,&quot;check_Focus&quot;:false},{&quot;id&quot;:101,&quot;pId&quot;:1,&quot;name&quot;:&quot;response&quot;,&quot;level&quot;:1,&quot;tId&quot;:&quot;autoResponserTree_11&quot;,&quot;parentTId&quot;:&quot;autoResponserTree_1&quot;,&quot;open&quot;:true,&quot;isParent&quot;:true,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:false,&quot;isLastNode&quot;:true,&quot;isAjaxing&quot;:false,&quot;checked&quot;:true,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:false,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:1,&quot;check_Focus&quot;:false,&quot;isHover&quot;:false,&quot;editNameFlag&quot;:false,&quot;children&quot;:[{&quot;id&quot;:102,&quot;pId&quot;:101,&quot;name&quot;:&quot;ProtoBuff&quot;,&quot;level&quot;:2,&quot;tId&quot;:&quot;autoResponserTree_12&quot;,&quot;parentTId&quot;:&quot;autoResponserTree_11&quot;,&quot;open&quot;:false,&quot;isParent&quot;:false,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:true,&quot;isLastNode&quot;:false,&quot;isAjaxing&quot;:false,&quot;checked&quot;:true,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:false,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:-1,&quot;check_Focus&quot;:true,&quot;isHover&quot;:true,&quot;editNameFlag&quot;:false,&quot;responseScript&quot;:&quot;var session = context.session;\nif(/.+\\/GetProtoBuf/.test(session.FullUrl))\n{\n session.GetResponseBodyAsString(function(ssn) {\n var response = JSON.parse(ssn.Return||\&quot;{}\&quot;);\n return response.Data;\n }).UtilSetResponseBody({\n\t\t'inc': null,\n\t\t'met': function(ssn,msg) {\n\t\t\treturn [msg.LastReturn];\n\t\t}\n\t}).SetResponseHeaders(JSON.stringify({'Content-Type':'application/xml'}));\n}&quot;},{&quot;id&quot;:101,&quot;pId&quot;:101,&quot;name&quot;:&quot;Root_cert&quot;,&quot;level&quot;:2,&quot;tId&quot;:&quot;autoResponserTree_13&quot;,&quot;parentTId&quot;:&quot;autoResponserTree_11&quot;,&quot;open&quot;:false,&quot;isParent&quot;:false,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:false,&quot;isLastNode&quot;:false,&quot;isAjaxing&quot;:false,&quot;checked&quot;:false,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:false,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:-1,&quot;check_Focus&quot;:false,&quot;isHover&quot;:false,&quot;editNameFlag&quot;:false,&quot;responseScript&quot;:&quot;&quot;,&quot;requestScript&quot;:&quot;var session = context.session;\r\nif(session.FullUrl.indexOf('calibur.com/root.cer')&gt;-1)\r\n{\r\n session.manual=true;\r\n Fiddler.GetBase64RootCertificate(function(base64){\r\n session.SetBypassGateway(true)\r\n\t\t .UtilCreateResponseAndBypassServer()\r\n\t\t .SetResponseBodyAsBase64(base64)\r\n\t\t .UtilChunkResponse(1)\r\n\t\t .Resume();\r\n });\r\n}&quot;},{&quot;id&quot;:101,&quot;pId&quot;:101,&quot;name&quot;:&quot;跳板机&quot;,&quot;level&quot;:2,&quot;tId&quot;:&quot;autoResponserTree_14&quot;,&quot;parentTId&quot;:&quot;autoResponserTree_11&quot;,&quot;open&quot;:false,&quot;isParent&quot;:false,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:false,&quot;isLastNode&quot;:true,&quot;isAjaxing&quot;:false,&quot;checked&quot;:false,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:false,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:-1,&quot;check_Focus&quot;:false,&quot;isHover&quot;:false,&quot;editNameFlag&quot;:false,&quot;requestScript&quot;:&quot;var session = context.session;\r\nif(session.FullUrl.indexOf('.ctripcorp.com/')&gt;-1&amp;&amp;\r\n session.FullUrl.indexOf('.uat.')==-1&amp;&amp;\r\n session.FullUrl.indexOf('.fat')==-1)\r\n{\r\n session.ProxySelfSocksV5('http://coreproxysite.ctripcorp.com:8080', true,\r\n \&quot;;10.32.*|;192.168.*|;*.qa.nt.ctripcorp.com\&quot;);\r\n}&quot;}]}],&quot;level&quot;:0,&quot;tId&quot;:&quot;autoResponserTree_1&quot;,&quot;parentTId&quot;:null,&quot;isParent&quot;:true,&quot;zAsync&quot;:true,&quot;isFirstNode&quot;:true,&quot;isLastNode&quot;:true,&quot;isAjaxing&quot;:false,&quot;isHover&quot;:false,&quot;editNameFlag&quot;:false,&quot;checked&quot;:true,&quot;checkedOld&quot;:false,&quot;nocheck&quot;:null,&quot;chkDisabled&quot;:false,&quot;halfCheck&quot;:false,&quot;check_Child_State&quot;:1,&quot;check_Focus&quot;:false}]" />
    </appSettings>
</configuration>